gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
FRed
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
FRed
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(paste(rownames(UK$site), rep(gr2, c_), colnames(UK$site)))
)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(paste(rownames(UK$site), rep(gr2, c_)), colnames(UK$site)))
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(paste(rep(rownames(UK$site), c_), rep(gr2, c_)), colnames(UK$site)))
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(colnames(UK$site)))
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(paste(rownames(UK$site), colnames(UK$site)))
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site))
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
e_gr_m
FRed
row.names(FRed) <- paste(rep(rownames(UK$site), c_), rep(gr2, c_))
FRed
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
FRed
FRed[order(rownames(FRed))]
FRed[order(row.names(FRed))]
row.names(FRed)
order(row.names(FRed))
order(as.numeric(row.names(FRed)))
FRed[order(as.numeric(row.names(FRed)))]
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
FRed
FRed <- FRed %>% mutate(sumVar = tapply(FRed, FRed, sum))
FRed <- FRed %>% mutate(sumVar = rowSums(FRed))
FRed
row.names(FRed) <- paste(rep(rownames(UK$site), c_), rep(gr2, c_))
FRed
FRed <- FRed %>% mutate(sumVar = rowSums(FRed))
FRed
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
#FRed <- FRed[order(row.names(FRed))]
FRed <- FRed %>% mutate(sumVar = rowSums(FRed))
FRed
row.names(FRed) <- paste(rep(row.names(UK$site), c_), rep(gr2, c_))
FRed
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
#FRed <- FRed[order(row.names(FRed))]
FRed <- FRed %>% mutate(sumVar = rowSums(FRed))
row.names(FRed) <- rep(row.names(UK$site))
row.names(FRed) <- rep(row.names(UK$site), c_)
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
#FRed <- FRed[order(row.names(FRed))]
FRed <- FRed %>% mutate(sumVar = rowSums(FRed))
row.names(FRed) <- rep(row.names(UK$site), c_)
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
#FRed <- FRed[order(row.names(FRed))]
FRed <- FRed %>% transmute(sumVar = rowSums(FRed))
FRed
rep(UK$site, c_)
rep(row.names(UK$site), c_)
FRed <- cbind(FRed, rep(row.names(UK$site), c_))
FRed
site
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed <- rbind(FRed, mats[[i]])
}
#FRed <- FRed[order(row.names(FRed))]
FRed <- FRed %>% transmute(nbsp_gr = rowSums(FRed))
FRed <- cbind(FRed, site)
FRed <- FRed[order(FRed$site)]
FRed <- FRed[,order(FRed$site)]
order(FRed$site)
FRed[order(FRed$site),]
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed1 <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed1 <- rbind(FRed1, mats[[i]])
}
FRed2 <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
FRed3 <- cbind(FRed2, site)
FRed4 <- FRed3[order(FRed3$site),]
FRed4
select(FRed4, -(site))
FRed <- FRed4[,-FRed4$site]
FRed <- FRed4[-FRed4$site,]
FRed2 <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
FRed3 <- cbind(FRed2, site, rep(gr2, c_))
FRed4 <- FRed3[order(FRed3$site),]
gr2
rep(gr2, c_)
gr2
site
p
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed1 <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed1 <- rbind(FRed1, mats[[i]])
}
FRed2 <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
FRed3 <- cbind(FRed2, site, rep(gr2, p))
FRed4 <- FRed3[order(FRed3$site),]
FRed4
FRed2 <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
FRed3 <- cbind(FRed2, site, rep(gr2, p)); rename(FRed3, rep(gr2, p) = group)
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed1 <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed1 <- rbind(FRed1, mats[[i]])
}
FRed2 <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
FRed3 <- cbind(FRed2, site, rep(gr2, p)); names(FRed3) <- c("nbsp","site","group")
FRed4 <- FRed3[order(FRed3$site),]
FRed4
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed1 <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed1 <- rbind(FRed1, mats[[i]])
}
FRed2 <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
FRed3 <- cbind(FRed2, site, rep(gr2, p)); names(FRed3) <- c("nbsp","site","group")
FRed <- FRed3[order(FRed3$site),]
row.names(FRed) <- paste(site, rep(gr2, c_))
FRed
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed1 <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed1 <- rbind(FRed1, mats[[i]])
}
FRed2 <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
FRed3 <- cbind(FRed2, site, rep(gr2, p)); names(FRed3) <- c("nbsp","site","group"); row.names(FRed3) <- NULL
FRed <- FRed3[order(FRed3$site),]
FRed
FRed3
FRed2 <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
FRed3 <- cbind(FRed2, site, rep(gr2, p)); names(FRed3) <- c("nbsp","site","group")
FRed <- FRed3[order(FRed3$site),]; row.names(FRed) <- NULL
FRed
FRed2 <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
FRed3 <- cbind(site, rep(gr2, p), FRed2); names(FRed3) <- c("site","group","nbsp")
FRed <- FRed3[order(FRed3$site),]; row.names(FRed) <- NULL
FRed
e_gr_fac
#e_gr_fac <- factor(e_gr)
#nbsp_e_gr <- tapply(e_gr_fac, e_gr_fac, length)
results <- dbFD(UK$trait, UK$site, corr = "cailliez", calc.FRic = FALSE, calc.FDiv = FALSE)
results2 <- data.frame(site, e_group, results$FRed, results$FDis); names(results2) <- c("site", "e_group", "FRed", "FDis")
res <- results2[order(results2$site),]
results <- dbFD(UK$trait, UK$site, corr = "cailliez", calc.FRic = FALSE, calc.FDiv = FALSE)
results2 <- data.frame(site, e_group, results$nbsp, results$FDis, FRed$nbsp); names(results2) <- c("site", "e_group", "nbsp", "FDis", "FRed")
res <- results2[order(results2$site),]
res
results <- dbFD(UK$trait, UK$site, corr = "cailliez", calc.FRic = FALSE, calc.FDiv = FALSE)
results2 <- data.frame(site, e_group, results$FDis, FRed$nbsp); names(results2) <- c("site", "e_group", "FDis", "FRed")
res <- results2[order(results2$site),]
res
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed1 <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed1 <- rbind(FRed1, mats[[i]])
}
FRed <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
#FRed3 <- cbind(site, rep(gr2, p), FRed2); names(FRed3) <- c("site","group","nbsp")
#FRed <- FRed3[order(FRed3$site),]
#e_gr_fac <- factor(e_gr)
#nbsp_e_gr <- tapply(e_gr_fac, e_gr_fac, length)
results <- dbFD(UK$trait, UK$site, corr = "cailliez", calc.FRic = FALSE, calc.FDiv = FALSE)
results2 <- data.frame(site, e_group, results$FDis, FRed$nbsp); names(results2) <- c("site", "e_group", "FDis", "FRed")
res <- results2[order(results2$site),]; row.names(res) <- NULL
res
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed1 <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed1 <- rbind(FRed1, mats[[i]])
}
FRed <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
#FRed3 <- cbind(site, rep(gr2, p), FRed2); names(FRed3) <- c("site","group","nbsp")
#FRed <- FRed3[order(FRed3$site),]
#e_gr_fac <- factor(e_gr)
#nbsp_e_gr <- tapply(e_gr_fac, e_gr_fac, length)
results <- dbFD(UK$trait, UK$site, corr = "cailliez", calc.FRic = FALSE, calc.FDiv = FALSE)
results2 <- data.frame(site, group, FRed$nbsp, results$FDis); names(results2) <- c("site", "group", "FRed", "FDis"); row.names(res) <- NULL
res <- results2[order(results2$site),]
################ Functional redundancy ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed1 <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed1 <- rbind(FRed1, mats[[i]])
}
FRed <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
#FRed3 <- cbind(site, rep(gr2, p), FRed2); names(FRed3) <- c("site","group","nbsp")
#FRed <- FRed3[order(FRed3$site),]
#e_gr_fac <- factor(e_gr)
#nbsp_e_gr <- tapply(e_gr_fac, e_gr_fac, length)
results <- dbFD(UK$trait, UK$site, corr = "cailliez", calc.FRic = FALSE, calc.FDiv = FALSE)
results2 <- data.frame(site, group, FRed$nbsp, results$FDis); names(results2) <- c("site", "group", "FRed", "FDis"); row.names(res) <- NULL
res <- results2[order(results2$site),]
results2 <- data.frame(site, e_group, FRed$nbsp, results$FDis); names(results2) <- c("site", "group", "FRed", "FDis"); row.names(res) <- NULL
res <- results2[order(results2$site),]
res
res <- results2[order(results2$site),]; row.names(res) <- NULL
res
################ Functional redundancy & Functional dispersion ##################
# find number of groups and return species assignation to groups
e_gr <- cutree(hclust_results[[v]], k = c_)
# p = number of plots
p <- nrow(UK$site)
# c_ = number of effect groups
gr = c_
gr2 <- unique(e_gr)
gr3 <- gr2[order(gr2)]
t2 <- rep(p,gr)
e_group <- rep(gr3, t2)
site <- rep(row.names(UK$site), gr)
e_gr1 <- rep(e_gr, p)
e_gr_m <- matrix(e_gr1, p, length(e_gr), byrow = T, dimnames = list(rownames(UK$site), colnames(UK$site)))
mats <- list()
FRed1 <- data.frame()
for (i in 1:gr){
t <- ifelse(e_gr_m == i, 1, 0)
mats[[i]] <- t * UK$site
FRed1 <- rbind(FRed1, mats[[i]])
}
FRed <- FRed1 %>% transmute(nbsp_gr = rowSums(FRed1)) # sum number of species per ecoregion per group
results <- dbFD(UK$trait, UK$site, corr = "cailliez", calc.FRic = FALSE, calc.FDiv = FALSE)
results2 <- data.frame(site, e_group, FRed$nbsp, results$FDis); names(results2) <- c("site", "group", "FRed", "FDis")
res <- results2[order(results2$site),]; row.names(res) <- NULL
res
